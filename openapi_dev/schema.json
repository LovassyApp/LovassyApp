{
  "openapi": "3.0.1",
  "info": {
    "title": "Blueboard",
    "version": "v4.0.0"
  },
  "servers": [
    {
      "url": "https://app.lovassy.hu"
    },
    {
      "url": "http://127.0.0.1:5279"
    }
  ],
  "paths": {
    "/Api/Auth/Login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create a new session for a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Api/Auth/Refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh a user's session",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthRefreshResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Api/Auth/Control": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get information about the current user",
        "description": "Requires one of the following permissions: Auth.Control",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthViewControlResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Auth/Logout": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "Delete the current user's session and refresh cookie",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Auth/VerifyEmail": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Verify a user's email address",
        "parameters": [
          {
            "name": "verifyToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Api/Auth/ResendVerifyEmail": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Resend a user's email verification email",
        "description": "Requires unverified email",
        "parameters": [
          {
            "name": "verifyUrl",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verifyTokenQueryKey",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Auth/SendPasswordReset": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send a password reset email to a user",
        "parameters": [
          {
            "name": "passwordResetUrl",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "passwordResetTokenQueryKey",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSendPasswordResetRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSendPasswordResetRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSendPasswordResetRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Api/Auth/ResetPassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset a user's password",
        "parameters": [
          {
            "name": "passwordResetToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthResetPasswordRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthResetPasswordRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthResetPasswordRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Api/FeedItems": {
      "get": {
        "tags": [
          "FeedItems"
        ],
        "summary": "Get a list of all feed items",
        "description": "Requires verified email; Requires one of the following permissions: Feed.IndexFeedItems; Requires the following features to be enabled: Feed",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedIndexFeedItemsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Grades": {
      "get": {
        "tags": [
          "Grades"
        ],
        "summary": "Get a list of the current user's grades",
        "description": "Requires verified email; Requires one of the following permissions: School.IndexGrades; Requires the following features to be enabled: School",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchoolIndexGradesResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/ImageVotingEntries/{id}": {
      "get": {
        "tags": [
          "ImageVotingEntries"
        ],
        "summary": "Get information about an image voting entry",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.ViewImageVotingEntry, ImageVotings.ViewActiveImageVotingEntry; Requires the following features to be enabled: ImageVotings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageVotingsViewImageVotingEntryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "ImageVotingEntries"
        ],
        "summary": "Update an image voting entry",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.UpdateImageVotingEntry, ImageVotings.UpdateOwnImageVotingEntry; Requires the following features to be enabled: ImageVotings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsUpdateImageVotingEntryRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsUpdateImageVotingEntryRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsUpdateImageVotingEntryRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ImageVotingEntries"
        ],
        "summary": "Delete an image voting entry",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.DeleteImageVotingEntry, ImageVotings.DeleteOwnImageVotingEntry; Requires the following features to be enabled: ImageVotings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/ImageVotingEntries": {
      "get": {
        "tags": [
          "ImageVotingEntries"
        ],
        "summary": "Get a list of all image voting entries",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.IndexImageVotingEntries, ImageVotings.IndexActiveImageVotingEntries; Requires the following features to be enabled: ImageVotings",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageVotingsIndexImageVotingEntriesResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "ImageVotingEntries"
        ],
        "summary": "Create an image voting entry",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.ChooseImageVotingEntry, ImageVotings.CreateActiveImageVotingEntry; Requires the following features to be enabled: ImageVotings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsCreateImageVotingEntryRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsCreateImageVotingEntryRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsCreateImageVotingEntryRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageVotingsCreateImageVotingEntryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/ImageVotingEntries/{id}/Choose": {
      "post": {
        "tags": [
          "ImageVotingEntries"
        ],
        "summary": "Choose an image voting entry (single choice image votings only)",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.ChooseActiveImageVotingEntry, ImageVotings.ChooseImageVotingEntry; Requires the following features to be enabled: ImageVotings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsChooseImageVotingEntryRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsChooseImageVotingEntryRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsChooseImageVotingEntryRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/ImageVotingEntries/{id}/Unchoose": {
      "post": {
        "tags": [
          "ImageVotingEntries"
        ],
        "summary": "Unchoose an image voting entry (single choice image votings only)",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.UnchooseActiveImageVotingEntry, ImageVotings.UnchooseImageVotingEntry; Requires the following features to be enabled: ImageVotings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsUnchooseImageVotingEntryRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsUnchooseImageVotingEntryRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsUnchooseImageVotingEntryRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/ImageVotingEntryImages": {
      "get": {
        "tags": [
          "ImageVotingEntryImages"
        ],
        "summary": "List all images of an image voting",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.IndexOwnImageVotingEntryImages, ImageVotings.IndexImageVotingEntryImages",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsIndexImageVotingEntryImagesRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsIndexImageVotingEntryImagesRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsIndexImageVotingEntryImagesRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageVotingsIndexImageVotingEntryImagesResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "ImageVotingEntryImages"
        ],
        "summary": "Upload an image to be used in an image voting entry",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.UploadActiveImageVotingEntryImage, ImageVotings.UploadImageVotingEntryImage",
        "parameters": [
          {
            "name": "imageVotingId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ImageVotingId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "File": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "ImageVotingId": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageVotingsUploadImageVotingEntryImageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/ImageVotingEntryImages/{id}": {
      "delete": {
        "tags": [
          "ImageVotingEntryImages"
        ],
        "summary": "Delete an image meant for an image voting entry",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.DeleteOwnImageVotingEntryImage, ImageVotings.DeleteImageVotingEntryImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/ImageVotings": {
      "get": {
        "tags": [
          "ImageVotings"
        ],
        "summary": "Get a list of image votings",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.IndexImageVotings, ImageVotings.IndexActiveImageVotings; Requires the following features to be enabled: ImageVotings",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageVotingsIndexImageVotingsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "ImageVotings"
        ],
        "summary": "Create a new image voting",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.CreateImageVoting; Requires the following features to be enabled: ImageVotings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsCreateImageVotingRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsCreateImageVotingRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsCreateImageVotingRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageVotingsCreateImageVotingResponse"
                }
              }
            }
          },
          "503": {
            "description": "Server Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/ImageVotings/{id}": {
      "get": {
        "tags": [
          "ImageVotings"
        ],
        "summary": "Get information about an image voting",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.ViewImageVoting, ImageVotings.ViewActiveImageVoting; Requires the following features to be enabled: ImageVotings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageVotingsViewImageVotingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "ImageVotings"
        ],
        "summary": "Update an image voting",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.UpdateImageVoting; Requires the following features to be enabled: ImageVotings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsUpdateImageVotingRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsUpdateImageVotingRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageVotingsUpdateImageVotingRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Server Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ImageVotings"
        ],
        "summary": "Delete an image voting",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.DeleteImageVoting; Requires the following features to be enabled: ImageVotings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/ImageVotings/{id}/Results": {
      "get": {
        "tags": [
          "ImageVotings"
        ],
        "summary": "Get results of an image voting",
        "description": "Requires verified email; Requires one of the following permissions: ImageVotings.ViewImageVotingResults, ImageVotings.ViewActiveImageVotingResults; Requires the following features to be enabled: ImageVotings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageVotingsViewImageVotingResultsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Import/Users": {
      "get": {
        "tags": [
          "Import"
        ],
        "summary": "Get a list of all users for grade importing",
        "description": "Requires the following features to be enabled: Import",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImportIndexUsersResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ImportKey": [ ]
          }
        ]
      }
    },
    "/Api/Import/Grades/{userId}": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Import grades for a user",
        "description": "Requires the following features to be enabled: Import",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportImportGradesRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportImportGradesRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportImportGradesRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ImportKey": [ ]
          }
        ]
      }
    },
    "/Api/Import/ResetKeyPassword": {
      "put": {
        "tags": [
          "Import"
        ],
        "summary": "Set the reset key password",
        "description": "Requires the following features to be enabled: Import",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportUpdateResetKeyPasswordRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportUpdateResetKeyPasswordRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportUpdateResetKeyPasswordRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ImportKey": [ ]
          }
        ]
      }
    },
    "/Api/ImportKeys": {
      "get": {
        "tags": [
          "ImportKeys"
        ],
        "summary": "Get a list of all import keys",
        "description": "Requires verified email; Requires one of the following permissions: Import.IndexImportKeys; Requires the following features to be enabled: Import",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImportIndexImportKeysResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "ImportKeys"
        ],
        "summary": "Create a new import key",
        "description": "Requires verified email; Requires one of the following permissions: Import.CreateImportKey; Requires the following features to be enabled: Import",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportCreateImportKeyRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportCreateImportKeyRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportCreateImportKeyRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportCreateImportKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/ImportKeys/{id}": {
      "get": {
        "tags": [
          "ImportKeys"
        ],
        "summary": "Get information about an import key",
        "description": "Requires verified email; Requires one of the following permissions: Import.ViewImportKey; Requires the following features to be enabled: Import",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportViewImportKeyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "ImportKeys"
        ],
        "summary": "Update an import key",
        "description": "Requires verified email; Requires one of the following permissions: Import.UpdateImportKey; Requires the following features to be enabled: Import",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportUpdateImportKeyRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportUpdateImportKeyRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportUpdateImportKeyRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ImportKeys"
        ],
        "summary": "Delete an import key",
        "description": "Requires verified email; Requires one of the following permissions: Import.DeleteImportKey; Requires the following features to be enabled: Import",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/LoloRequests": {
      "get": {
        "tags": [
          "LoloRequests"
        ],
        "summary": "Get a list of all lolo requests",
        "description": "Requires verified email; Requires one of the following permissions: Shop.IndexLoloRequests; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopIndexLoloRequestsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "LoloRequests"
        ],
        "summary": "Create a new lolo request",
        "description": "Requires verified email; Requires one of the following permissions: Shop.CreateLoloRequest; Requires the following features to be enabled: Shop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateLoloRequestRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateLoloRequestRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateLoloRequestRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopCreateLoloRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/LoloRequests/Own": {
      "get": {
        "tags": [
          "LoloRequests"
        ],
        "summary": "Get a list of the current user's lolo requests",
        "description": "Requires verified email; Requires one of the following permissions: Shop.IndexOwnLoloRequests; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopIndexOwnLoloRequestsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/LoloRequests/{id}": {
      "get": {
        "tags": [
          "LoloRequests"
        ],
        "summary": "Get information about a lolo request",
        "description": "Requires verified email; Requires one of the following permissions: Shop.ViewLoloRequest; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopViewLoloRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "LoloRequests"
        ],
        "summary": "Update a lolo request",
        "description": "Requires verified email; Requires one of the following permissions: Shop.UpdateOwnLoloRequest, Shop.UpdateLoloRequest; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateLoloRequestRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateLoloRequestRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateLoloRequestRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "LoloRequests"
        ],
        "summary": "Delete a lolo request",
        "description": "Requires verified email; Requires one of the following permissions: Shop.DeleteOwnLoloRequest, Shop.DeleteLoloRequest; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/LoloRequests/Overrule/{id}": {
      "post": {
        "tags": [
          "LoloRequests"
        ],
        "summary": "Overrule a lolo request",
        "description": "Requires verified email; Requires one of the following permissions: Shop.OverruleLoloRequest; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopOverruleLoloRequestRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopOverruleLoloRequestRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopOverruleLoloRequestRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Lolos/Own": {
      "get": {
        "tags": [
          "Lolos"
        ],
        "summary": "Get a list of the user's lolo coins",
        "description": "Requires verified email; Requires one of the following permissions: Shop.IndexOwnLolos; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopIndexOwnLolosResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Lolos": {
      "get": {
        "tags": [
          "Lolos"
        ],
        "summary": "Get a list of all lolo coins",
        "description": "Requires verified email; Requires one of the following permissions: Shop.IndexLolos; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopIndexLolosResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/OwnedItems": {
      "get": {
        "tags": [
          "OwnedItems"
        ],
        "summary": "Get a list of all owned items",
        "description": "Requires verified email; Requires one of the following permissions: Shop.IndexOwnedItems; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Search",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopIndexOwnedItemsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "OwnedItems"
        ],
        "summary": "Create a new owned item",
        "description": "Requires verified email; Requires one of the following permissions: Shop.CreateOwnedItem; Requires the following features to be enabled: Shop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateOwnedItemRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateOwnedItemRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateOwnedItemRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopCreateOwnedItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/OwnedItems/Own": {
      "get": {
        "tags": [
          "OwnedItems"
        ],
        "summary": "Get a list of the current user's owned items",
        "description": "Requires verified email; Requires one of the following permissions: Shop.IndexOwnOwnedItems; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Search",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopIndexOwnOwnedItemsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/OwnedItems/{id}": {
      "get": {
        "tags": [
          "OwnedItems"
        ],
        "summary": "Get information about an owned item",
        "description": "Requires verified email; Requires one of the following permissions: Shop.ViewOwnedItem, Shop.ViewOwnOwnedItem; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopViewOwnedItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "OwnedItems"
        ],
        "summary": "Update an owned item",
        "description": "Requires verified email; Requires one of the following permissions: Shop.UpdateOwnedItem; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateOwnedItemRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateOwnedItemRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateOwnedItemRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "OwnedItems"
        ],
        "summary": "Delete an owned item",
        "description": "Requires verified email; Requires one of the following permissions: Shop.DeleteOwnedItem, Shop.DeleteOwnOwnedItem; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/OwnedItems/{id}/Use": {
      "post": {
        "tags": [
          "OwnedItems"
        ],
        "summary": "Use an owned item",
        "description": "Requires verified email; Requires one of the following permissions: Shop.UseOwnOwnedItem; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUseOwnedItemRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUseOwnedItemRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUseOwnedItemRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get a list of all permissions",
        "description": "Requires verified email; Requires one of the following permissions: Auth.IndexPermissions",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "503": {
            "description": "Server Error"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthIndexPermissionsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get a list of all products or only store products depending on permissions",
        "description": "Requires verified email; Requires one of the following permissions: Shop.IndexProducts, Shop.IndexStoreProducts; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Search",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopIndexProductsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new product",
        "description": "Requires verified email; Requires one of the following permissions: Shop.CreateProduct; Requires the following features to be enabled: Shop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateProductRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateProductRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateProductRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopCreateProductResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get information about a product",
        "description": "Requires verified email; Requires one of the following permissions: Shop.ViewProduct, Shop.ViewStoreProduct; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopViewProductResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product",
        "description": "Requires verified email; Requires one of the following permissions: Shop.UpdateProduct; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateProductRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateProductRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateProductRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product",
        "description": "Requires verified email; Requires one of the following permissions: Shop.DeleteProduct; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Products/Buy/{id}": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Buy a product",
        "description": "Requires verified email; Requires one of the following permissions: Shop.BuyProduct; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/QRCodes": {
      "get": {
        "tags": [
          "QRCodes"
        ],
        "summary": "Get a list of all QR codes",
        "description": "Requires verified email; Requires one of the following permissions: Shop.IndexQRCodes; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopIndexQRCodesResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "QRCodes"
        ],
        "summary": "Create a new QR code",
        "description": "Requires verified email; Requires one of the following permissions: Shop.CreateQRCode; Requires the following features to be enabled: Shop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateQRCodeRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateQRCodeRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateQRCodeRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopCreateQRCodeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/QRCodes/{id}": {
      "get": {
        "tags": [
          "QRCodes"
        ],
        "summary": "Get information about a QR code",
        "description": "Requires verified email; Requires one of the following permissions: Shop.ViewQRCode; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopViewQRCodeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "QRCodes"
        ],
        "summary": "Update a QR code",
        "description": "Requires verified email; Requires one of the following permissions: Shop.UpdateQRCode; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateQRCodeRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateQRCodeRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateQRCodeRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "QRCodes"
        ],
        "summary": "Delete a QR code",
        "description": "Requires verified email; Requires one of the following permissions: Shop.DeleteQRCode; Requires the following features to be enabled: Shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Status/Version": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get information about the application version",
        "parameters": [
          {
            "name": "SendOk",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SendMOTD",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusViewVersionResponse"
                }
              }
            }
          },
          "418": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Api/Status/ServiceStatus": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get information about the status of the application",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusViewServiceStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Api/Status/NotifyOnResetKeyPasswordSet": {
      "post": {
        "tags": [
          "Status"
        ],
        "summary": "Subscribe an email to when a password reset key has been set",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusNotifyOnResetKeyPasswordSetRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusNotifyOnResetKeyPasswordSetRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatusNotifyOnResetKeyPasswordSetRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Api/UserGroups": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Get a list of all user groups",
        "description": "Requires verified email; Requires one of the following permissions: Auth.IndexUserGroups",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthIndexUserGroupsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Create a new user group",
        "description": "Requires verified email; Requires one of the following permissions: Auth.CreateUserGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthCreateUserGroupRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthCreateUserGroupRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthCreateUserGroupRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthCreateUserGroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/UserGroups/{id}": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Get information about a user group",
        "description": "Requires verified email; Requires one of the following permissions: Auth.ViewUserGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthViewUserGroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Update a user group",
        "description": "Requires verified email; Requires one of the following permissions: Auth.UpdateUserGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUpdateUserGroupRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUpdateUserGroupRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUpdateUserGroupRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Delete a user group",
        "description": "Requires verified email; Requires one of the following permissions: Auth.DeleteUserGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a list of all users",
        "description": "Requires verified email; Requires one of the following permissions: Users.IndexUsers; Requires the following features to be enabled: Users",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersIndexUsersResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "description": "Requires the following features to be enabled: Users",
        "parameters": [
          {
            "name": "verifyUrl",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verifyTokenQueryKey",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersCreateUserRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersCreateUserRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UsersCreateUserRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/Api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get information about a user",
        "description": "Requires verified email; Requires one of the following permissions: Users.ViewUser; Requires the following features to be enabled: Users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersViewUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user",
        "description": "Requires verified email; Requires one of the following permissions: Users.UpdateUser; Requires the following features to be enabled: Users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersUpdateUserRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersUpdateUserRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UsersUpdateUserRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user",
        "description": "Requires verified email; Requires one of the following permissions: Users.DeleteUser; Requires the following features to be enabled: Users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Users/Kick/{id}": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Delete all active sessions of a user",
        "description": "Requires verified email; Requires one of the following permissions: Users.KickUser; Requires the following features to be enabled: Users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Users/Kick/All": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Delete all active sessions of all users",
        "description": "Requires verified email; Requires one of the following permissions: Users.KickAllUsers; Requires the following features to be enabled: Users",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthCreateUserGroupRequestBody": {
        "required": [
          "name",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "AuthCreateUserGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthIndexPermissionsResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dangerous": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AuthIndexUserGroupsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AuthLoginRequestBody": {
        "required": [
          "email",
          "password",
          "remember"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "remember": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AuthLoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/AuthLoginResponseUser"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpiration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthLoginResponseUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "realName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthRefreshResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/AuthRefreshResponseUser"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpiration": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AuthRefreshResponseUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "realName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthResetPasswordRequestBody": {
        "required": [
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "newPassword": {
            "minLength": 1,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\w\\W]{8,}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthSendPasswordResetRequestBody": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthUpdateUserGroupRequestBody": {
        "required": [
          "name",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "AuthViewControlResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/AuthViewControlResponseUser"
          },
          "session": {
            "$ref": "#/components/schemas/AuthViewControlResponseSession"
          },
          "isSuperUser": {
            "type": "boolean"
          },
          "userGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthViewControlResponseSession": {
        "type": "object",
        "properties": {
          "expiry": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AuthViewControlResponseUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "realName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthViewUserGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FeedIndexFeedItemsResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsChooseImageVotingEntryRequestBody": {
        "type": "object",
        "properties": {
          "aspectKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsCreateImageVotingEntryRequestBody": {
        "required": [
          "imageUrl",
          "title"
        ],
        "type": "object",
        "properties": {
          "imageVotingId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "imageUrl": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsCreateImageVotingEntryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "imageVotingId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsCreateImageVotingRequestBody": {
        "required": [
          "active",
          "aspects",
          "description",
          "maxUploadsPerUser",
          "name",
          "showUploaderInfo",
          "type",
          "uploaderUserGroupId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "minLength": 1,
            "type": "string"
          },
          "aspects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageVotingsCreateImageVotingRequestBodyImageVotingAspect"
            }
          },
          "active": {
            "type": "boolean"
          },
          "showUploaderInfo": {
            "type": "boolean"
          },
          "uploaderUserGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "bannedUserGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxUploadsPerUser": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsCreateImageVotingRequestBodyImageVotingAspect": {
        "required": [
          "description",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "type": "string"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsCreateImageVotingResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "aspects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageVotingsCreateImageVotingResponseImageVotingAspect"
            },
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "showUploaderInfo": {
            "type": "boolean"
          },
          "uploaderUserGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "bannedUserGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxUploadsPerUser": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsCreateImageVotingResponseImageVotingAspect": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsIndexImageVotingEntriesResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/ImageVotingsIndexImageVotingEntriesResponseUser"
          },
          "imageVotingId": {
            "type": "integer",
            "format": "int32"
          },
          "canChoose": {
            "type": "boolean",
            "nullable": true
          },
          "chosen": {
            "type": "boolean",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsIndexImageVotingEntriesResponseUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "realName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsIndexImageVotingEntryImagesRequestBody": {
        "type": "object",
        "properties": {
          "imageVotingId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsIndexImageVotingEntryImagesResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "originalFilename": {
            "type": "string",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsIndexImageVotingsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "showUploaderInfo": {
            "type": "boolean"
          },
          "uploaderUserGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "bannedUserGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxUploadsPerUser": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsUnchooseImageVotingEntryRequestBody": {
        "type": "object",
        "properties": {
          "aspectKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsUpdateImageVotingEntryRequestBody": {
        "required": [
          "imageUrl",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "imageUrl": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsUpdateImageVotingRequestBody": {
        "required": [
          "active",
          "aspects",
          "description",
          "maxUploadsPerUser",
          "name",
          "showUploaderInfo",
          "type",
          "uploaderUserGroupId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "minLength": 1,
            "type": "string"
          },
          "aspects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageVotingsUpdateImageVotingRequestBodyImageVotingAspect"
            }
          },
          "active": {
            "type": "boolean"
          },
          "showUploaderInfo": {
            "type": "boolean"
          },
          "uploaderUserGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "bannedUserGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxUploadsPerUser": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsUpdateImageVotingRequestBodyImageVotingAspect": {
        "required": [
          "description",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "type": "string"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsUploadImageVotingEntryImageResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "originalFilename": {
            "type": "string",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsViewImageVotingEntryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/ImageVotingsViewImageVotingEntryResponseUser"
          },
          "imageVotingId": {
            "type": "integer",
            "format": "int32"
          },
          "canChoose": {
            "type": "boolean",
            "nullable": true
          },
          "chosen": {
            "type": "boolean",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsViewImageVotingEntryResponseUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "realName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsViewImageVotingResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "aspects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageVotingsViewImageVotingResponseImageVotingAspect"
            },
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "showUploaderInfo": {
            "type": "boolean"
          },
          "uploaderUserGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "bannedUserGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxUploadsPerUser": {
            "type": "integer",
            "format": "int32"
          },
          "canUpload": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsViewImageVotingResponseImageVotingAspect": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "canChoose": {
            "type": "boolean",
            "nullable": true
          },
          "chosenEntryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsViewImageVotingResultsResponse": {
        "type": "object",
        "properties": {
          "chooserCount": {
            "type": "integer",
            "format": "int32"
          },
          "incrementerCount": {
            "type": "integer",
            "format": "int32"
          },
          "uploaderCount": {
            "type": "integer",
            "format": "int32"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageVotingsViewImageVotingResultsResponseEntry"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsViewImageVotingResultsResponseEntry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "choicesCount": {
            "type": "integer",
            "format": "int32"
          },
          "incrementSum": {
            "type": "integer",
            "format": "int32"
          },
          "aspects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageVotingsViewImageVotingResultsResponseEntryAspect"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageVotingsViewImageVotingResultsResponseEntryAspect": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "choicesCount": {
            "type": "integer",
            "format": "int32"
          },
          "incrementSum": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ImportCreateImportKeyRequestBody": {
        "required": [
          "enabled",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ImportCreateImportKeyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportImportGradesRequestBody": {
        "required": [
          "jsonEncrypted"
        ],
        "type": "object",
        "properties": {
          "jsonEncrypted": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ImportIndexImportKeysResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ImportIndexUsersResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "omCodeHashed": {
            "type": "string",
            "nullable": true
          },
          "publicKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportUpdateImportKeyRequestBody": {
        "required": [
          "enabled",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ImportUpdateResetKeyPasswordRequestBody": {
        "required": [
          "resetKeyPassword"
        ],
        "type": "object",
        "properties": {
          "resetKeyPassword": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ImportViewImportKeyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "SchoolIndexGradesResponse": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "nullable": true
          },
          "grades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchoolIndexGradesResponseGrade"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SchoolIndexGradesResponseGrade": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "subjectCategory": {
            "type": "string",
            "nullable": true
          },
          "theme": {
            "type": "string",
            "nullable": true
          },
          "teacher": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "gradeValue": {
            "type": "integer",
            "format": "int32"
          },
          "textGrade": {
            "type": "string",
            "nullable": true
          },
          "shortTextGrade": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "evaluationDate": {
            "type": "string",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "gradeType": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopCreateLoloRequestRequestBody": {
        "required": [
          "body",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "body": {
            "maxLength": 65535,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ShopCreateLoloRequestResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deniedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopCreateOwnedItemRequestBody": {
        "required": [
          "productId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "minLength": 1,
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "usedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopCreateOwnedItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "product": {
            "$ref": "#/components/schemas/ShopCreateOwnedItemResponseProduct"
          },
          "usedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopCreateOwnedItemResponseProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "richTextContent": {
            "type": "string",
            "nullable": true
          },
          "qrCodeActivated": {
            "type": "boolean"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopCreateOwnedItemResponseProductInput"
            },
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopCreateOwnedItemResponseProductInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopCreateProductRequestBody": {
        "required": [
          "description",
          "inputs",
          "name",
          "notifiedEmails",
          "price",
          "qrCodeActivated",
          "qrCodes",
          "quantity",
          "richTextContent",
          "thumbnailUrl",
          "userLimit",
          "userLimited",
          "visible"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "richTextContent": {
            "minLength": 1,
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          },
          "qrCodeActivated": {
            "type": "boolean"
          },
          "qrCodes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "price": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "userLimited": {
            "type": "boolean"
          },
          "userLimit": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "format": "int32"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopCreateProductRequestBodyInput"
            }
          },
          "notifiedEmails": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "thumbnailUrl": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ShopCreateProductRequestBodyInput": {
        "required": [
          "key",
          "label",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "type": "string"
          },
          "key": {
            "minLength": 1,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "type": "string"
          },
          "label": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ShopCreateProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "richTextContent": {
            "type": "string",
            "nullable": true
          },
          "visible": {
            "type": "boolean"
          },
          "qrCodeActivated": {
            "type": "boolean"
          },
          "qrCodes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "userLimited": {
            "type": "boolean"
          },
          "userLimit": {
            "type": "integer",
            "format": "int32"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopCreateProductResponseInput"
            },
            "nullable": true
          },
          "notifiedEmails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopCreateProductResponseInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopCreateQRCodeRequestBody": {
        "required": [
          "email",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "ShopCreateQRCodeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopIndexLoloRequestsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deniedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopIndexLolosResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isSpent": {
            "type": "boolean"
          },
          "loloType": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnLoloRequestsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deniedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnLolosResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "coins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopIndexOwnLolosResponseCoin"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnLolosResponseCoin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isSpent": {
            "type": "boolean"
          },
          "loloType": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "grades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopIndexOwnLolosResponseGrade"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnLolosResponseGrade": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "subjectCategory": {
            "type": "string",
            "nullable": true
          },
          "teacher": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "gradeValue": {
            "type": "integer",
            "format": "int32"
          },
          "textGrade": {
            "type": "string",
            "nullable": true
          },
          "shortTextGrade": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "evaluationDate": {
            "type": "string",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "gradeType": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnOwnedItemsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/ShopIndexOwnOwnedItemsResponseProduct"
          },
          "usedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnOwnedItemsResponseInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnOwnedItemsResponseProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "qrCodeActivated": {
            "type": "boolean"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopIndexOwnOwnedItemsResponseInput"
            },
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnedItemsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "product": {
            "$ref": "#/components/schemas/ShopIndexOwnedItemsResponseProduct"
          },
          "usedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnedItemsResponseInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnedItemsResponseProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "qrCodeActivated": {
            "type": "boolean"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopIndexOwnedItemsResponseInput"
            },
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopIndexProductsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visible": {
            "type": "boolean"
          },
          "qrCodeActivated": {
            "type": "boolean"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "userLimited": {
            "type": "boolean"
          },
          "userLimit": {
            "type": "integer",
            "format": "int32"
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopIndexQRCodesResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopOverruleLoloRequestRequestBody": {
        "required": [
          "accepted"
        ],
        "type": "object",
        "properties": {
          "accepted": {
            "type": "boolean"
          },
          "loloAmount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShopUpdateLoloRequestRequestBody": {
        "required": [
          "body",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "body": {
            "maxLength": 65535,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ShopUpdateOwnedItemRequestBody": {
        "type": "object",
        "properties": {
          "usedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopUpdateProductRequestBody": {
        "required": [
          "description",
          "inputs",
          "name",
          "notifiedEmails",
          "price",
          "qrCodeActivated",
          "qrCodes",
          "quantity",
          "richTextContent",
          "thumbnailUrl",
          "userLimit",
          "userLimited",
          "visible"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "richTextContent": {
            "minLength": 1,
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          },
          "qrCodeActivated": {
            "type": "boolean"
          },
          "qrCodes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "price": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "userLimited": {
            "type": "boolean"
          },
          "userLimit": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopUpdateProductRequestBodyInput"
            }
          },
          "notifiedEmails": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "thumbnailUrl": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ShopUpdateProductRequestBodyInput": {
        "required": [
          "key",
          "label",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "type": "string"
          },
          "key": {
            "minLength": 1,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "type": "string"
          },
          "label": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ShopUpdateQRCodeRequestBody": {
        "required": [
          "email",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "ShopUseOwnedItemRequestBody": {
        "type": "object",
        "properties": {
          "qrCodeContent": {
            "type": "string",
            "nullable": true
          },
          "inputs": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopViewLoloRequestResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deniedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopViewOwnedItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "product": {
            "$ref": "#/components/schemas/ShopViewOwnedItemResponseProduct"
          },
          "usedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopViewOwnedItemResponseProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "richTextContent": {
            "type": "string",
            "nullable": true
          },
          "qrCodeActivated": {
            "type": "boolean"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopViewOwnedItemResponseProductInput"
            },
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopViewOwnedItemResponseProductInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopViewProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "richTextContent": {
            "type": "string",
            "nullable": true
          },
          "visible": {
            "type": "boolean"
          },
          "qrCodeActivated": {
            "type": "boolean"
          },
          "qrCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopViewProductResponseQRCode"
            },
            "nullable": true
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "userLimited": {
            "type": "boolean"
          },
          "userLimit": {
            "type": "integer",
            "format": "int32"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopViewProductResponseInput"
            },
            "nullable": true
          },
          "notifiedEmails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopViewProductResponseInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopViewProductResponseQRCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopViewQRCodeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "imageSvg": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "StatusNotifyOnResetKeyPasswordSetRequestBody": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "StatusViewServiceStatusResponse": {
        "type": "object",
        "properties": {
          "ready": {
            "type": "boolean"
          },
          "serviceStatus": {
            "$ref": "#/components/schemas/StatusViewServiceStatusResponseServiceStatus"
          }
        },
        "additionalProperties": false
      },
      "StatusViewServiceStatusResponseServiceStatus": {
        "type": "object",
        "properties": {
          "database": {
            "type": "boolean"
          },
          "realtime": {
            "type": "boolean"
          },
          "resetKeyPassword": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StatusViewVersionRequestBody": {
        "required": [
          "sendMOTD",
          "sendOk"
        ],
        "type": "object",
        "properties": {
          "sendOk": {
            "type": "boolean"
          },
          "sendMOTD": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StatusViewVersionResponse": {
        "type": "object",
        "properties": {
          "whoAmI": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "dotNetVersion": {
            "type": "string",
            "nullable": true
          },
          "contributors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "repository": {
            "type": "string",
            "nullable": true
          },
          "motd": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsersCreateUserRequestBody": {
        "required": [
          "email",
          "name",
          "omCode",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\w\\W]{8,}$",
            "type": "string"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "omCode": {
            "minLength": 1,
            "pattern": "^\\d{11}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UsersIndexUsersResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "realName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsersIndexUsersResponseUserGroup"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UsersIndexUsersResponseUserGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsersUpdateUserRequestBody": {
        "required": [
          "email",
          "name",
          "userGroups"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "userGroups": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "UsersViewUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "realName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          },
          "lastOnlineAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsersViewUserResponseUserGroup"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UsersViewUserResponseUserGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Token": {
        "type": "http",
        "description": "Please enter a valid token",
        "scheme": "Bearer",
        "bearerFormat": "Token"
      },
      "ImportKey": {
        "type": "apiKey",
        "description": "Please enter a valid import key",
        "name": "X-Authorization",
        "in": "header"
      }
    }
  }
}