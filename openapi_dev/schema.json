{
  "openapi": "3.0.1",
  "info": {
    "title": "Blueboard",
    "version": "v4"
  },
  "paths": {
    "/Api/Auth/Login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Api/Auth/Refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthRefreshResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Api/Auth/Control": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "<b>Requires one of the following permissions</b>: Auth.Control",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthViewControlResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Auth/Logout": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Auth/VerifyEmail": {
      "post": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "verifyToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Api/Auth/ResendVerifyEmail": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "<b>Requires unverified email</b>",
        "parameters": [
          {
            "name": "verifyUrl",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verifyTokenQueryKey",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Auth/SendPasswordReset": {
      "post": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "passwordResetUrl",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "passwordResetTokenQueryKey",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSendPasswordResetRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSendPasswordResetRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSendPasswordResetRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Api/Auth/ResetPassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "passwordResetToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthResetPasswordRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthResetPasswordRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthResetPasswordRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Api/Grades": {
      "get": {
        "tags": [
          "Grades"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: School.IndexGrades",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchoolIndexGradesResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Import/Users": {
      "get": {
        "tags": [
          "Import"
        ],
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImportIndexUsersResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ImportKey": [ ]
          }
        ]
      }
    },
    "/Api/Import/Grades/{userId}": {
      "post": {
        "tags": [
          "Import"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportImportGradesRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportImportGradesRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportImportGradesRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ImportKey": [ ]
          }
        ]
      }
    },
    "/Api/Import/ResetKeyPassword": {
      "put": {
        "tags": [
          "Import"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportUpdateResetKeyPasswordRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportUpdateResetKeyPasswordRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportUpdateResetKeyPasswordRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ImportKey": [ ]
          }
        ]
      }
    },
    "/Api/ImportKeys": {
      "get": {
        "tags": [
          "ImportKeys"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Import.IndexImportKeys",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImportIndexImportKeysResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "ImportKeys"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Import.CreateImportKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportCreateImportKeyRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportCreateImportKeyRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportCreateImportKeyRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportCreateImportKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/ImportKeys/{id}": {
      "get": {
        "tags": [
          "ImportKeys"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Import.ViewImportKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportViewImportKeyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "ImportKeys"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Import.UpdateImportKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportUpdateImportKeyRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportUpdateImportKeyRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportUpdateImportKeyRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ImportKeys"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Import.DeleteImportKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/LoloRequests": {
      "get": {
        "tags": [
          "LoloRequests"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Shop.IndexLoloRequests",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopIndexLoloRequestsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "LoloRequests"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Shop.CreateLoloRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateLoloRequestRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateLoloRequestRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateLoloRequestRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopCreateLoloRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/LoloRequests/{id}": {
      "get": {
        "tags": [
          "LoloRequests"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Shop.ViewLoloRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopViewLoloRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "LoloRequests"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Shop.UpdateOwnLoloRequest, Shop.UpdateLoloRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateLoloRequestRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateLoloRequestRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateLoloRequestRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "LoloRequests"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Shop.DeleteOwnLoloRequest, Shop.DeleteLoloRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/LoloRequests/Overrule/{id}": {
      "post": {
        "tags": [
          "LoloRequests"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Shop.OverruleLoloRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopOverruleLoloRequestRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopOverruleLoloRequestRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopOverruleLoloRequestRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Lolos/Own": {
      "get": {
        "tags": [
          "Lolos"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Shop.IndexOwnLolos",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopIndexOwnLolosResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Lolos": {
      "get": {
        "tags": [
          "Lolos"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Shop.IndexLolos",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopIndexLolosResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Auth.IndexPermissions",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "503": {
            "description": "Server Error"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthIndexPermissionsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Status/Version": {
      "get": {
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "name": "SendOk",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SendMOTD",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusViewVersionResponse"
                }
              }
            }
          },
          "418": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Api/Status/ServiceStatus": {
      "get": {
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusViewServiceStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Api/UserGroups": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Auth.IndexUserGroups",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthIndexUserGroupsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "UserGroups"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Auth.CreateUserGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthCreateUserGroupRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthCreateUserGroupRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthCreateUserGroupRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthCreateUserGroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/UserGroups/{id}": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Auth.ViewUserGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthViewUserGroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "UserGroups"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Auth.UpdateUserGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUpdateUserGroupRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUpdateUserGroupRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUpdateUserGroupRequestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "UserGroups"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Auth.DeleteUserGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    },
    "/Api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Users.IndexUsers",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersIndexUsersResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "verifyUrl",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verifyTokenQueryKey",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersCreateUserRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersCreateUserRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UsersCreateUserRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/Api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Users.ViewUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersViewUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Users.UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersUpdateUserRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersUpdateUserRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UsersUpdateUserRequestBody"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "<b>Requires verified email</b><br><b>Requires one of the following permissions</b>: Users.DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Token": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthCreateUserGroupRequestBody": {
        "required": [
          "name",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "AuthCreateUserGroupResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthIndexPermissionsResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthIndexUserGroupsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthLoginRequestBody": {
        "required": [
          "email",
          "password",
          "remember"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "remember": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AuthLoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/AuthLoginResponseUser"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpiration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthLoginResponseUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "realName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthRefreshResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/AuthRefreshResponseUser"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpiration": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AuthRefreshResponseUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "realName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthResetPasswordRequestBody": {
        "required": [
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "newPassword": {
            "minLength": 1,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthSendPasswordResetRequestBody": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthUpdateUserGroupRequestBody": {
        "required": [
          "name",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "AuthViewControlResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/AuthViewControlResponseUser"
          },
          "session": {
            "$ref": "#/components/schemas/AuthViewControlResponseSession"
          },
          "userGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthViewControlResponseSession": {
        "type": "object",
        "properties": {
          "expiry": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AuthViewControlResponseUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "realName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthViewUserGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportCreateImportKeyRequestBody": {
        "required": [
          "enabled",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ImportCreateImportKeyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportImportGradesRequestBody": {
        "required": [
          "jsonEncrypted"
        ],
        "type": "object",
        "properties": {
          "jsonEncrypted": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ImportIndexImportKeysResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ImportIndexUsersResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "omCodeHashed": {
            "type": "string",
            "nullable": true
          },
          "publicKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportUpdateImportKeyRequestBody": {
        "required": [
          "enabled",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ImportUpdateResetKeyPasswordRequestBody": {
        "required": [
          "resetKeyPassword"
        ],
        "type": "object",
        "properties": {
          "resetKeyPassword": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ImportViewImportKeyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "SchoolIndexGradesResponse": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "nullable": true
          },
          "grades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchoolIndexGradesResponseGrade"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SchoolIndexGradesResponseGrade": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "subjectCategory": {
            "type": "string",
            "nullable": true
          },
          "teacher": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "gradeValue": {
            "type": "integer",
            "format": "int32"
          },
          "textGrade": {
            "type": "string",
            "nullable": true
          },
          "shortTextGrade": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "evaluationDate": {
            "type": "string",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "gradeType": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopCreateLoloRequestRequestBody": {
        "required": [
          "body",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "body": {
            "maxLength": 65535,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ShopCreateLoloRequestResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deniedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopIndexLoloRequestsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deniedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopIndexLolosResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isSpent": {
            "type": "boolean"
          },
          "loloType": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnLolosResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "coins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopIndexOwnLolosResponseCoin"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnLolosResponseCoin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isSpent": {
            "type": "boolean"
          },
          "loloType": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "grades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopIndexOwnLolosResponseGrade"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopIndexOwnLolosResponseGrade": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "subjectCategory": {
            "type": "string",
            "nullable": true
          },
          "teacher": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "gradeValue": {
            "type": "integer",
            "format": "int32"
          },
          "textGrade": {
            "type": "string",
            "nullable": true
          },
          "shortTextGrade": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "evaluationDate": {
            "type": "string",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "gradeType": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShopOverruleLoloRequestRequestBody": {
        "required": [
          "accepted"
        ],
        "type": "object",
        "properties": {
          "accepted": {
            "type": "boolean"
          },
          "loloAmount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShopUpdateLoloRequestRequestBody": {
        "required": [
          "body",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "body": {
            "maxLength": 65535,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ShopViewLoloRequestResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deniedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusViewServiceStatusResponse": {
        "type": "object",
        "properties": {
          "ready": {
            "type": "boolean"
          },
          "serviceStatus": {
            "$ref": "#/components/schemas/StatusViewServiceStatusResponseServiceStatus"
          }
        },
        "additionalProperties": false
      },
      "StatusViewServiceStatusResponseServiceStatus": {
        "type": "object",
        "properties": {
          "database": {
            "type": "boolean"
          },
          "realtime": {
            "type": "boolean"
          },
          "resetKeyPassword": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StatusViewVersionRequestBody": {
        "required": [
          "sendMOTD",
          "sendOk"
        ],
        "type": "object",
        "properties": {
          "sendOk": {
            "type": "boolean"
          },
          "sendMOTD": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StatusViewVersionResponse": {
        "type": "object",
        "properties": {
          "whoAmI": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "dotNetVersion": {
            "type": "string",
            "nullable": true
          },
          "contributors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "repository": {
            "type": "string",
            "nullable": true
          },
          "motd": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsersCreateUserRequestBody": {
        "required": [
          "email",
          "name",
          "omCode",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$",
            "type": "string"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "omCode": {
            "minLength": 1,
            "pattern": "^\\d{11}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UsersIndexUsersResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "realName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsersIndexUsersResponseUserGroup"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsersIndexUsersResponseUserGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsersUpdateUserRequestBody": {
        "required": [
          "email",
          "name",
          "userGroups"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "userGroups": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "UsersViewUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "realName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsersViewUserResponseUserGroup"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsersViewUserResponseUserGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Token": {
        "type": "http",
        "description": "Please enter a valid token",
        "scheme": "Bearer",
        "bearerFormat": "Token"
      },
      "ImportKey": {
        "type": "apiKey",
        "description": "Please enter a valid import key",
        "name": "X-Authorization",
        "in": "header"
      }
    }
  }
}