/*
 * Blueboard
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ImageVotingsUploadImageVotingEntryImageResponse {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "filename", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub filename: Option<Option<String>>,
    #[serde(rename = "originalFilename", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub original_filename: Option<Option<String>>,
    #[serde(rename = "mimeType", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub mime_type: Option<Option<String>>,
    #[serde(rename = "path", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub path: Option<Option<String>>,
    #[serde(rename = "userId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<uuid::Uuid>,
    #[serde(rename = "url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub url: Option<Option<String>>,
}

impl ImageVotingsUploadImageVotingEntryImageResponse {
    pub fn new() -> ImageVotingsUploadImageVotingEntryImageResponse {
        ImageVotingsUploadImageVotingEntryImageResponse {
            id: None,
            filename: None,
            original_filename: None,
            mime_type: None,
            path: None,
            user_id: None,
            url: None,
        }
    }
}


