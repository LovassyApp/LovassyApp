/*
 * Blueboard
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ImageVotingsViewImageVotingResponseImageVotingAspect {
    #[serde(rename = "key", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub key: Option<Option<String>>,
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "canChoose", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub can_choose: Option<Option<bool>>,
    #[serde(rename = "chosenEntryId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub chosen_entry_id: Option<Option<i32>>,
    #[serde(rename = "imageVotingAspectEntryIncrements", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub image_voting_aspect_entry_increments: Option<Option<Vec<crate::models::ImageVotingsViewImageVotingResponseImageVotingAspectEntryIncrement>>>,
}

impl ImageVotingsViewImageVotingResponseImageVotingAspect {
    pub fn new() -> ImageVotingsViewImageVotingResponseImageVotingAspect {
        ImageVotingsViewImageVotingResponseImageVotingAspect {
            key: None,
            name: None,
            description: None,
            can_choose: None,
            chosen_entry_id: None,
            image_voting_aspect_entry_increments: None,
        }
    }
}


